/*------------------------------------------------------------------
* [Mixins]
*/

@mixin visually-hidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

@mixin page-container {
  max-width: 1170px;
  padding-left: 1rem;
  padding-right: 1rem;
  margin: 0 auto;
}

@mixin link-underline-hover($bottom: 0) {
  position: relative;
  &:hover {
    text-decoration: none;
    &::after {
      width: 100%;
    }
  }
  &::after {
    content: "";
    position: absolute;
    bottom: $bottom;
    left: 0;
    width: 0;
    height: rem(2);
    background: $btn-primary;
    transition: 0.4s ease-in-out;
  }
}

@mixin ripple-effect($hover-color, $active-color) {
  background-position: center;
  transition: background 0.8s;
  &:hover {
    background-color: $hover-color;
    background-image: radial-gradient(circle at center center, transparent 1%, $hover-color 1%);
    background-repeat: repeat;
    background-attachment: scroll;
    background-clip: border-box;
    background-origin: padding-box;
    background-position-x: center;
    background-position-y: center;
    background-size: 15000% auto;
  }
  &:active {
    background-color: $active-color;
    background-size: 100%;
    transition: background 0s;
  }
}

@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin reset-link {
  color: inherit;
  text-decoration: none;

  &:hover,
  &:focus,
  &:active {
    text-decoration: none;
    color: inherit;
    outline: none;
  }
}

@mixin unstyle-list {
  list-style: none;

  li {
    list-style-image: none;
    list-style-type: none;
  }
}

// =========================================================================
//
//  PRECISE CONTROL OVER RESPONSIVE TYPOGRAPHY FOR SASS
//  ---------------------------------------------------
//  Indrek Paas @indrekpaas
//
//  Inspired by Mike Riethmuller's Precise control over responsive typography
//  http://madebymike.com.au/writing/precise-control-responsive-typography/
//
//  @example
//
//  html {
//    @include fluid-type(font-size, 320px, 1366px, 14px, 18px);
//  }
//
//  h1 {
//    @include fluid-type(padding-bottom padding-top, 20em, 70em, 2em, 4em);
//  }
//
// =========================================================================

@mixin fluid-type($properties: font-size, $min-vw: rem(280), $max-vw: rem(1200), $min-value: rem(16), $max-value: rem(19)) {
  @each $property in $properties {
    #{$property}: $min-value;
  }

  @media (min-width: $min-vw) {
    @each $property in $properties {
      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
    }
  }

  @media (min-width: $max-vw) {
    @each $property in $properties {
      #{$property}: $max-value;
    }
  }
}

@mixin quote-text {
  position: relative;
  quotes: "\00ab" "\00bb";
  &::before {
    content: open-quote;
  }
  &::after {
    content: close-quote;
  }
}

// =========================================================================
//
//  Responsive Multi-Column Lists with Flexbox
//  ------------------------------------------
//
//  @url
//
//  https://www.fourkitchens.com/blog/article/responsive-multi-column-lists-flexbox/
//
//  @example
//
//  @include n-columns($list: advantages__list, $item: advantages__item, $max-cols: 2);
//
// =========================================================================

@mixin n-columns($list: list, $item: list__item, $min-width: rem(280), $gutter: rem(16), $last-equal: false, $max-cols: 5) {
  .#{$list} {
    display: flex;
    flex-wrap: wrap;
    margin-left: -$gutter;
    margin-top: -$gutter;

    .#{$item} {
      flex: 1 0 $min-width;
      margin-left: $gutter;
      margin-top: $gutter;

      @if $last-equal {
        @for $i from 2 through $max-cols {
          $screen-width: ($min-width*$i)+($gutter*$i);
          $column-width: (100%/$i);
          @media (min-width: $screen-width) {
            max-width: calc(#{$column-width} - #{$gutter});
          }
        }

        $column-width: (100%/$max-cols);
        @media (min-width: $min-width*$max-cols) {
          min-width: calc(#{$column-width} - #{$gutter});
        }
      }
    }
  }
}

// Hover mixin and `$enable-hover-media-query` are deprecated.
//
// Originally added during our alphas and maintained during betas, this mixin was
// designed to prevent `:hover` stickiness on iOS-an issue where hover styles
// would persist after initial touch.
//
// For backward compatibility, we've kept these mixins and updated them to
// always return their regular pseudo-classes instead of a shimmed media query.
//
// Issue: https://github.com/twbs/bootstrap/issues/25195
//
// @url https://github.com/twbs/bootstrap/blob/v4-dev/scss/mixins/_hover.scss
//

@mixin hover {
  &:hover { @content; }
}

@mixin hover-focus {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin plain-hover-focus {
  &,
  &:hover,
  &:focus {
    @content;
  }
}

@mixin hover-focus-active {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}
